openapi: 3.0.0
info:
  title: Combined API Documentation
  version: 1.0.0
servers:
  - url: https://dashboard.sms2u.io
security:
  - bearerAuth: []
paths:
  /api/webhook/SECRET_KEY/PHONE_NO:
    get:
      tags:
        - SMS2U
      summary: messages
      description: |-
        The data provided pertains to an API endpoint named "messages". 

        This endpoint uses the GET request method. As it's a GET request, it's used to retrieve data from the specific URL provided: "https://dashboard.sms2u.io/api/webhook/SECRET_KEY/PHONE_NO". This URL points to a resource in the SMS2U service, and appears to be specific to a webhook setup.

        As for security, the endpoint uses bearer token authentication. This is indicated under the "auth" object with the "type" set as "bearer". It shows a bearer token represented by the "key" and "value" fields: the key being "token" and the actual token value being "BearerToken". This token would generally be provided by the authentication server and used to authenticate the client's request.

        The "headers" field is currently empty, which means there are no additional HTTP headers being sent with the request. If the API required any specific headers, these would be listed here.

        In summary, this endpoint is used to retrieve specific message data from the SMS2U API, using a GET request and bearer token for authentication. The URL points to a specific webhook, suggesting the data is being pushed as messages are received.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:37:12 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '974'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"3ce-Qxd+fADV3OPpGi2RuIWfFuedW+0"
          content:
            application/json:
              schema:
                type: object
              example:
                messages:
                  - _id: 67ab1d3cf5d0746d07f0a301
                    body: 928511 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-11T09:49:48.039Z'
                  - _id: 67aa0a08076f92f8e0c40180
                    body: 218128 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-10T14:15:36.868Z'
                  - _id: 67a7570d06854264004e6482
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T13:07:25.447Z'
                  - _id: 67a754ed06854264004e6473
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:58:21.098Z'
                  - _id: 67a7536006854264004e6445
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:51:44.203Z'
                  - _id: 67a7523206854264004e642a
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:46:42.522Z'
        '404':
          description: Not Found
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:39:46 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '45'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"2d-hHv8Rbm/ij2cLl9JYZdm1h3pIXg"
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                message: User Not Found!
  /api/webhook/SECRET_KEY/numberAndMessageList:
    get:
      tags:
        - SMS2U
      summary: NumberAndMessagesList
      description: |-
        The data provided pertains to an API endpoint named "messages". 

        This endpoint uses the GET request method. As it's a GET request, it's used to retrieve data from the specific URL provided: "https://dashboard.sms2u.io/api/webhook/SECRET_KEY/numberAndMessageList". This URL points to a resource in the SMS2U service, and appears to be specific to a webhook setup.

        As for security, the endpoint uses bearer token authentication. This is indicated under the "auth" object with the "type" set as "bearer". It shows a bearer token represented by the "key" and "value" fields: the key being "token" and the actual token value being "BearerToken". This token would generally be provided by the authentication server and used to authenticate the client's request.

        The "headers" field is currently empty, which means there are no additional HTTP headers being sent with the request. If the API required any specific headers, these would be listed here.

        In summary, this endpoint is used to retrieve all message and number data from the SMS2U API, using a GET request and bearer token for authentication. The URL points to a specific webhook, suggesting the data is being pushed as messages and number are received.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:37:12 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '974'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"3ce-Qxd+fADV3OPpGi2RuIWfFuedW+0"
          content:
            application/json:
              schema:
                type: object
              example:
                numbers:
                  - '+447454171735'
                  - TKTMASTER
                  - '+1122334455'
                  - '+447578237527'
                messages:
                  - _id: 67ab1d3cf5d0746d07f0a301
                    body: 928511 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-11T09:49:48.039Z'
                  - _id: 67aa0a08076f92f8e0c40180
                    body: 218128 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-10T14:15:36.868Z'
                  - _id: 67a7570d06854264004e6482
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T13:07:25.447Z'
                  - _id: 67a754ed06854264004e6473
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:58:21.098Z'
                  - _id: 67a7536006854264004e6445
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:51:44.203Z'
                  - _id: 67a7523206854264004e642a
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:46:42.522Z'
        '404':
          description: Not Found
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:39:46 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '45'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"2d-hHv8Rbm/ij2cLl9JYZdm1h3pIXg"
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                message: User Not Found!
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
