openapi: 3.0.0
info:
  title: Combined API Documentation
  version: 1.0.0
servers:
  - url: https://dashboard.sms2u.io
security:
  - bearerAuth: []
paths:
  /api/messages/SECRET_KEY/PHONE_NO:
    get:
      tags:
        - AccountGeneral
      summary: messages
      description: |-
        This endpoint is named `messages` and it is designed to retrieve message data from `https://dashboard.sms2u.io/api/messages/SECRET_KEY/PHONE_NO`, using a GET method. The URL requires two dynamic parameters, the `SECRET_KEY` and the `PHONE_NO` which should be replaced by the valid secret key and phone number respectively before making a request.

        No specific headers are required in the request being sent to this endpoint; however, it requires authentication. It uses a 'bearer token' type of authentication for securing its endpoint. The key in this 'bearer' authentication is named 'token' and its corresponding value should be the valid 'BearerToken'.

        In summary, this endpoint is basically used to retrieve messages associated with a specific phone number which is identified by the 'PHONE_NO' in the endpoint URL. Using the provided 'BearerToken' as an authentication parameter ensures the security and reliability of data retrieved from this endpoint. The data acquired can be used for several purposes, all dependent on the needs of developers or the application integrating this API.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:37:12 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '974'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"3ce-Qxd+fADV3OPpGi2RuIWfFuedW+0"
          content:
            application/json:
              schema:
                type: object
              example:
                messages:
                  - _id: 67ab1d3cf5d0746d07f0a301
                    body: 928511 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-11T09:49:48.039Z'
                  - _id: 67aa0a08076f92f8e0c40180
                    body: 218128 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-10T14:15:36.868Z'
                  - _id: 67a7570d06854264004e6482
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T13:07:25.447Z'
                  - _id: 67a754ed06854264004e6473
                    body: 941840 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:58:21.098Z'
                  - _id: 67a7536006854264004e6445
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:51:44.203Z'
                  - _id: 67a7523206854264004e642a
                    body: 411206 is your Ticketmaster code.
                    from: TKTMASTER
                    to: PHONE_NO
                    dateReceived: '2025-02-08T12:46:42.522Z'
        '404':
          description: Not Found
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.18.0 (Ubuntu)
            Date:
              schema:
                type: string
                example: Tue, 11 Feb 2025 10:39:46 GMT
            Content-Type:
              schema:
                type: string
                example: application/json; charset=utf-8
            Content-Length:
              schema:
                type: integer
                example: '45'
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: Express
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            ETag:
              schema:
                type: string
                example: W/"2d-hHv8Rbm/ij2cLl9JYZdm1h3pIXg"
          content:
            application/json:
              schema:
                type: object
              example:
                success: false
                message: User Not Found!
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
